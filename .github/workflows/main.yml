name: Terraform CI/CD with Inputs

on:
  workflow_dispatch: # Allows manual trigger with inputs
    inputs:
      ami_id:
        description: "The AMI ID for the EC2 instance"
        required: true
      subnet_id:
        description: "The Subnet ID"
        required: true
      security_group_id:
        description: "The Security Group ID"
        required: true
      key_pair_name:
        description: "The Key Pair Name"
        required: true

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the repository
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: Set up Terraform CLI
    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.5.0

    # Step 3: Initialize Terraform
    - name: Terraform Init
      run: terraform init

    # Step 4: Terraform Plan with inputs
    - name: Terraform Plan
      run: terraform plan -var "ami_id=${{ github.event.inputs.ami_id }}" \
                          -var "subnet_id=${{ github.event.inputs.subnet_id }}" \
                          -var "security_group_id=${{ github.event.inputs.security_group_id }}" \
                          -var "key_pair_name=${{ github.event.inputs.key_pair_name }}"

    # Step 5: Terraform Apply with inputs
    - name: Terraform Apply
      run: terraform apply -auto-approve -var "ami_id=${{ github.event.inputs.ami_id }}" \
                           -var "subnet_id=${{ github.event.inputs.subnet_id }}" \
                           -var "security_group_id=${{ github.event.inputs.security_group_id }}" \
                           -var "key_pair_name=${{ github.event.inputs.key_pair_name }}"
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
